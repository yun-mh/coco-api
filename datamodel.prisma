type User {
  id: ID! @id
  avatar: String @default(value: "https://pngimage.net/wp-content/uploads/2018/05/default-profile-pic-png-8.png")
  username: String! @unique
  email: String! @unique
  password: String!
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  dogs: [Dog!]! @relation(name: "DogsOfUser", onDelete: CASCADE)
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  notifications: [Notification!]! @relation(name: "NotificationsOfUser", onDelete: CASCADE)
  chatrooms: [ChatRoom!]!
  resetSecret: String
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  token: String
}

type Dog {
  id: ID! @id
  image: String
  name: String!
  gender: String!
  breed: String!
  birthdate: DateTime!
  user: User! @relation(name: "DogsOfUser")
  isMissed: Boolean! @default(value: false)
}

type Post {
  id: ID! @id
  location: String
  caption: String
  user: User @relation(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost" onDelete: CASCADE)
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Notification {
  id: ID! @id
  from: User! @relation(name: "NotificationFrom")
  user: User! @relation(name: "NotificationsOfUser")
  comment: Comment
  post: Post
  type: String!
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type ChatRoom {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]
  updated: DateTime
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Message {
  id: ID! @id
  text: String
  from: User @relation(name: "From")
  to: User @relation(name: "To")
  chatroom: ChatRoom
  read: Boolean
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}