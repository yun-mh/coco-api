type User {
  id: ID!
  avatar: String
  username: String!
  email: String!
  following: [User!]!
  followingCount: Int!
  followers: [User!]!
  followersCount: Int!
  dogs: [Dog!]!
  posts: [Post!]!
  postsCount: Int!
  likes: [Like!]!
  comments: [Comment!]!
  chatrooms: [ChatRoom!]!
  isFollowing: Boolean!
  isMyself: Boolean!
  createdAt: String
  updatedAt: String
  resetSecret: String
  token: String
}

type Dog {
  id: ID!
  image: String
  name: String!
  breed: String!
  gender: String!
  birthdate: String!
  user: User!
  lostDogThreads: [LostDogThread]
  isMissed: Boolean
}

type Post {
  id: ID!
  location: String
  caption: String
  user: User!
  files: [File!]!
  likes: [Like!]!
  comments: [Comment!]!
  isLiked: Boolean!
  likeCount: Int!
  commentCount: Int!
  createdAt: String
  updatedAt: String
}

type LostDogThread {
  id: ID!
  dog: Dog!
  name: String!
  breed: String!
  age: Int!
  gender: String!
  size: String!
  weight: Float
  feature: String
  images: [LostDogImage]
  lostWhen: String!
  lostWhere: String!
  owner: String!
  phone: String!
  email: String
  reports: [LostDogReport]
  isClosed: Boolean!
  createdAt: String
  updatedAt: String
}

type LostDogImage {
  id: ID!
  thread: LostDogThread!
  url: String!
  createdAt: String
  updatedAt: String
}

type LostDogReport {
  id: ID!
  thread: LostDogThread!
  password: String!
  location: String!
  when: String!
  reportType: String!
  name: String!
  phone: String!
  memo: String
  createdAt: String
  updatedAt: String
}

type Like {
  id: ID!
  user: User!
  post: Post!
  createdAt: String
  updatedAt: String
}

type Comment {
  id: ID!
  text: String!
  user: User!
  post: Post!
  createdAt: String
  updatedAt: String
}

enum NotificationType {
  COMMENT
  FOLLOW
  LIKE
}

type Notification {
  id: ID!
  from: User!
  user: User!
  comment: Comment
  post: Post
  type: NotificationType!
  createdAt: String
  updatedAt: String
}

type File {
  id: ID!
  url: String!
  post: Post!
  createdAt: String
  updatedAt: String
}

type ChatRoom {
  id: ID!
  participants: [User!]!
  messages: [Message!]
  updated: String
  createdAt: String
  updatedAt: String
}

type Message {
  id: ID!
  text: String
  from: User
  to: User
  chatroom: ChatRoom
  read: Boolean
  createdAt: String
  updatedAt: String
}

type Walker {
  id: ID!
  user: User!
  locations: [Location]
  isWalking: Boolean
  createdAt: String
  updatedAt: String
}

type Location {
  id: ID!
  walker: Walker!
  latitude: Float!
  longitude: Float!
  createdAt: String
  updatedAt: String
}
